#include <iostream>
#include <chrono>
#include <thread>

class CPUTimer {
public:
    CPUTimer() : start(std::chrono::high_resolution_clock::now()) {}

    void reset() {
        start = std::chrono::high_resolution_clock::now();
    }

    double elapsed() const {
        auto now = std::chrono::high_resolution_clock::now();
        return std::chrono::duration_cast<std::chrono::milliseconds>(now - start).count();
    }

private:
    std::chrono::high_resolution_clock::time_point start;
};

int main() {
    CPUTimer timer;
    std::this_thread::sleep_for(std::chrono::seconds(1));
    std::cout << "Elapsed time: " << timer.elapsed() << " ms\n";
    return 0;
}
